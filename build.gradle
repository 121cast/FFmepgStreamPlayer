apply plugin: 'com.android.model.library'

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            minSdkVersion.apiLevel = 16
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = "1.0"
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.pro'))
        }
    }

    android.ndk {
        moduleName = "OmnyFFmpeg"
        cppFlags.add("-I${file("src/main/jni/include")}".toString())
        CFlags.add("-I${file("src/main/jni/include")}".toString())
        ldLibs.addAll(["log", "ijkffmpeg"])
        ldFlags.add("-L${file('src/main/jniLibs/arm64-v8a')}".toString())
        ldFlags.add("-L${file('src/main/jniLibs/armeabi-v7a')}".toString())
        ldFlags.add("-L${file('src/main/jniLibs/x86')}".toString())
        ldFlags.add("-L${file('src/main/jniLibs/x86_64')}".toString())
        abiFilters.addAll(["armeabi-v7a", "arm64-v8a", "x86", "x86_64"])
        stl = "c++_shared"
    }
//
//    android.productFlavors {
//        create ("arm7") {
//            ndk.abiFilters.add("armeabi-v7a")
//            ndk.ldFlags.add("-L${file('src/main/jniLibs/armeabi-v7a')}".toString())
//        }
//        create ("arm8") {
//            ndk.abiFilters.add("arm64-v8a")
//            ndk.ldFlags.add("-L${file('src/main/jniLibs/arm64-v8a')}".toString())
//        }
//        create ("x86-32") {
//            ndk.abiFilters.add("x86")
//            ndk.ldFlags.add("-L${file('src/main/jniLibs/x86')}".toString())
//        }
//        create ("x86-64") {
//            ndk.abiFilters.add("x86_64")
//            ndk.ldFlags.add("-L${file('src/main/jniLibs/x86_64')}".toString())
//        }
//        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
//        // https://developer.android.com/ndk/guides/abis.html#sa
//
//        // build one including all cpu architectures
//        // create("all")
//    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}
